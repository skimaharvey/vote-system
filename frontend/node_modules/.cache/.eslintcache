[{"/Users/ski/Documents/buildspace/vote-system/frontend/src/index.js":"1","/Users/ski/Documents/buildspace/vote-system/frontend/src/reportWebVitals.js":"2","/Users/ski/Documents/buildspace/vote-system/frontend/src/components/Dapp.js":"3","/Users/ski/Documents/buildspace/vote-system/frontend/src/components/AddVoter.js":"4","/Users/ski/Documents/buildspace/vote-system/frontend/src/components/Proposals.js":"5","/Users/ski/Documents/buildspace/vote-system/frontend/src/components/CheckVoterAddress.js":"6","/Users/ski/Documents/buildspace/vote-system/frontend/src/utils/index.js":"7"},{"size":513,"mtime":1641984455793,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1641984455794,"results":"10","hashOfConfig":"9"},{"size":4118,"mtime":1641998866734,"results":"11","hashOfConfig":"9"},{"size":569,"mtime":1641984455792,"results":"12","hashOfConfig":"9"},{"size":590,"mtime":1641998625295,"results":"13","hashOfConfig":"9"},{"size":968,"mtime":1641984455792,"results":"14","hashOfConfig":"9"},{"size":278,"mtime":1641984455794,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k6fnjw",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/ski/Documents/buildspace/vote-system/frontend/src/index.js",[],"/Users/ski/Documents/buildspace/vote-system/frontend/src/reportWebVitals.js",[],"/Users/ski/Documents/buildspace/vote-system/frontend/src/components/Dapp.js",["32","33"],"import React, { useEffect, useState } from 'react';\n\nimport { ethers } from 'ethers';\n\nimport CheckVoterAddress from './CheckVoterAddress';\nimport Proposals from './Proposals';\nimport AddVoter from './AddVoter';\n\nimport TokenArtifact from '../ABI/Ballot.json';\nimport contractAddress from '../ABI/contract-address.json';\n\nexport const Dapp = () => {\n\tconst [token, setToken] = useState();\n\tconst [newVoter, setNewVoter] = useState('');\n\tconst [newVoterStatus, setNewVoterStatus] = useState('');\n\tconst [voterStatus, setVoterStatus] = useState();\n\tconst [voterAddressToCheck, setVoterAddressToCheck] = useState('');\n\tconst [proposals, setProposals] = useState([]);\n\tconst [chairperson, setChairperson] = useState('');\n\tconst [numberOfVotes, setNumberOfVotes] = useState(0)\n\tconst [showError, setShowError] = useState(false)\n\t// **************** Ethers Connection for the SmartContract ****************\n\n\tasync function _initialize() {\n\t\tawait _intializeEthers();\n\t}\n\n\tconst _intializeEthers = async () => {\n\t\t// ethers connection for the smartcontract\n\t\tconst _provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\t\tconst _token = new ethers.Contract(\n\t\t\tcontractAddress.Token,\n\t\t\tTokenArtifact.abi,\n\t\t\t_provider.getSigner(0)\n\t\t);\n\n\t\t// get the proposals\n\t\tconst newProposal = await _token.getAllProposals();\n\t\tlet nVotes = 0\n\t\tnewProposal.forEach(arr => nVotes += arr.voteCount.toNumber())\n\t\t// get the chairman address\n\t\tsetNumberOfVotes(nVotes)\n\t\tconst newChairperson = await _token.chairperson();\n\n\t\t// save the token data into a hook to reuse it along the app\n\t\tsetToken(_token);\n\t\tsetProposals(newProposal);\n\t\tsetChairperson(newChairperson);\n\t};\n\n\t// Connects to the smart contract token id (check /contracts/contract-address.json)\n\tasync function init() {\n\t\tconst [selectedAddress] = await window.ethereum.enable();\n\t\t_initialize(selectedAddress);\n\t}\n\n\tuseEffect(() => {\n\t\t// When the page loads it will initialize the init function\n\t\t// that we need to connect the frontend with the smartcontract\n\t\tinit();\n\t}, []);\n\n\tasync function updateVoteNumber(block) {\n\t\tconst newProposal = await token.getAllProposals();\n\t\tlet nVotes = 0\n\t\tnewProposal.forEach(arr => nVotes += arr.voteCount.toNumber())\n\t\tsetProposals(newProposal);\n\t\tsetNumberOfVotes(nVotes)\n\t}\n\n\tuseEffect(() => {\n\t\tif(token) {\n\t\t\ttoken.on(\"newVote\",updateVoteNumber )\n\t\t}\n\t\treturn () => {\n\t\t\tif(token){\n\t\t\t\ttoken.off(\"newVote\", null)\n\t\t\t}\n\t\t}\n\t}, [token])\n\n\t// **************** Here Starts The Real Logic of the Frontend -> SmartContract ****************\n\n\t// Vote the selected proposal (you can only vote one time)\n\tconst voteProposal = async (proposal) => {\n\t\ttry {\n\t\t\tawait token.vote(proposal);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"error: \",error[\"message\"])\n\t\t\tsetShowError(true)\n\t\t\tsetTimeout(() => setShowError(false), 2000)\n\t\t}\n\t};\n\n\t// Check if the address the user entered is a a voter or not\n\tconst checkAddressVoter = async () => {\n\t\ttry {\n\t\t\tconst voterData = await token.voters(`${voterAddressToCheck}`);\n\t\t\tsetVoterStatus(voterData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetVoterStatus('An error has occured');\n\t\t}\n\t};\n\n\t// It gives the right to vote to a new address\n\tconst addNewVoter = async () => {\n\t\ttry {\n\t\t\tawait token.giveRightToVote(newVoter);\n\t\t\tsetNewVoterStatus('Success');\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetNewVoterStatus('An error has occured');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{ padding: '3rem 5rem' }}>\n\t\t\t<h1>Voting System</h1>\n\t\t\t<p>Number Of Votee: {numberOfVotes}</p>\n\t\t\t{showError? \n\t\t\t\t<p\n\t\t\t\t\tstyle={{height: 32, color: 'red'}}\n\t\t\t\t>You probably already voted</p>\n\t\t\t:\n\t\t\t\t<p style={{height: 32}}></p>\n\t\t\t}\n\t\t\t<div>\n\t\t\t\t<h4>chairperson: {chairperson}</h4>\n\t\t\t</div>\n\t\t\t<Proposals proposals={proposals} voteProposal={voteProposal} />\n\t\t\t<AddVoter\n\t\t\t\taddNewVoter={addNewVoter}\n\t\t\t\tsetNewVoter={setNewVoter}\n\t\t\t\tnewVoter={newVoter}\n\t\t\t\tnewVoterStatus={newVoterStatus}\n\t\t\t/>\n\t\t\t<CheckVoterAddress\n\t\t\t\tvoterAddressToCheck={voterAddressToCheck}\n\t\t\t\tsetVoterAddressToCheck={setVoterAddressToCheck}\n\t\t\t\tcheckAddressVoter={checkAddressVoter}\n\t\t\t\tvoterStatus={voterStatus}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","/Users/ski/Documents/buildspace/vote-system/frontend/src/components/AddVoter.js",[],"/Users/ski/Documents/buildspace/vote-system/frontend/src/components/Proposals.js",[],"/Users/ski/Documents/buildspace/vote-system/frontend/src/components/CheckVoterAddress.js",[],"/Users/ski/Documents/buildspace/vote-system/frontend/src/utils/index.js",[],["34","35"],{"ruleId":"36","severity":1,"message":"37","line":62,"column":5,"nodeType":"38","endLine":62,"endColumn":7,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":81,"column":5,"nodeType":"38","endLine":81,"endColumn":12,"suggestions":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["46"],"React Hook useEffect has a missing dependency: 'updateVoteNumber'. Either include it or remove the dependency array.",["47"],"no-native-reassign",["48"],"no-negated-in-lhs",["49"],{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [init]",{"range":"54","text":"55"},"Update the dependencies array to be: [token, updateVoteNumber]",{"range":"56","text":"57"},[2029,2031],"[init]",[2425,2432],"[token, updateVoteNumber]"]