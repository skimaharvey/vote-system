{"version":3,"sources":["components/CheckVoterAddress.js","components/Proposals.js","utils/index.js","components/AddVoter.js","components/Dapp.js","reportWebVitals.js","index.js"],"names":["CheckVoterAddress","voterAddressToCheck","setVoterAddressToCheck","checkAddressVoter","voterStatus","style","width","display","justifyContent","value","onChange","e","target","onClick","paddingTop","voted","toString","Number","weight","_hex","Proposals","proposals","voteProposal","map","proposal","index","bytesProposal","name","newName","replace","toUpperCase","substring","parseName","ethers","utils","parseBytes32String","voteCount","padding","marginLeft","AddVoter","newVoter","setNewVoter","addNewVoter","newVoterStatus","Dapp","useState","token","setToken","setNewVoterStatus","setVoterStatus","setProposals","chairperson","setChairperson","numberOfVotes","setNumberOfVotes","showError","setShowError","_initialize","a","_intializeEthers","_provider","providers","Web3Provider","window","ethereum","_token","Contract","contractAddress","Token","TokenArtifact","abi","getSigner","getAllProposals","newProposal","nVotes","forEach","arr","toNumber","newChairperson","enable","updateVoteNumber","block","useEffect","init","on","off","vote","console","log","setTimeout","voters","voterData","giveRightToVote","height","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i+wBAqCeA,EArCW,SAAC,GAKpB,IAAD,IAJLC,EAIK,EAJLA,oBACAC,EAGK,EAHLA,uBACAC,EAEK,EAFLA,kBACAC,EACK,EADLA,YAKA,OACC,gCACC,iEACA,sBACCC,MAAO,CACNC,MAAO,OACPC,QAAS,OACTC,eAAgB,iBAJlB,UAMC,uBACCC,MAAOR,EACPS,SAdgC,SAACC,GACpCT,EAAuBS,EAAEC,OAAOH,UAe9B,wBAAQI,QAASV,EAAjB,sBAEgB,yBAAhBC,GAA0CA,GAC1C,sBAAKC,MAAO,CAAES,WAAY,OAA1B,UACC,8CACA,0CAAab,KACb,+CAAWG,QAAX,IAAWA,GAAX,UAAWA,EAAaW,aAAxB,aAAW,EAAoBC,cAC/B,8CAAiBC,OAAM,OAACb,QAAD,IAACA,GAAD,UAACA,EAAac,cAAd,aAAC,EAAqBC,YAE5C,IACc,yBAAhBf,GAA0C,4BAAIA,QCRnCgB,EAtBG,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/B,OACC,gCACC,2CAAmB,IAClBD,EAAUE,KAAI,SAACC,EAAUC,GACzB,ICLuBC,EDKjBC,ECDe,SAACA,GACzB,IAAMC,EAAUD,EAAKE,QAAQ,IAAK,KAClC,OAAOD,EAAQ,GAAGE,cAAgBF,EAAQG,UAAU,GDDpCC,ECLUN,EDKWF,EAASG,KCJvCM,IAAOC,MAAMC,mBAAmBT,KDK9BU,EAAYZ,EAASY,UAAUjB,KACrC,OACC,sBAAiBd,MAAO,CAAEgC,QAAS,UAAnC,0BACKV,EADL,MACcV,OAAOmB,GACpB,wBACC/B,MAAO,CAAEiC,WAAY,OACrBzB,QAAS,kBAAMS,EAAaG,IAF7B,oBAFSA,UEYAc,EAtBE,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAIvD,OACC,gCACC,oDACA,oEACA,sBACCtC,MAAO,CACNC,MAAO,OACPC,QAAS,OACTC,eAAgB,iBAJlB,UAMC,uBAAOC,MAAO+B,EAAU9B,SAbJ,SAACC,GACvB8B,EAAY9B,EAAEC,OAAOH,UAanB,wBAAQI,QAAS6B,EAAjB,2BAEAC,GAAkB,yCAAYA,S,gBCNrBC,EAAO,WAAO,IAAD,EACCC,qBADD,mBAClBC,EADkB,KACXC,EADW,OAEOF,mBAAS,IAFhB,mBAElBL,EAFkB,KAERC,EAFQ,OAGmBI,mBAAS,IAH5B,mBAGlBF,EAHkB,KAGFK,EAHE,OAIaH,qBAJb,mBAIlBzC,EAJkB,KAIL6C,EAJK,OAK6BJ,mBAAS,IALtC,mBAKlB5C,EALkB,KAKGC,EALH,OAMS2C,mBAAS,IANlB,mBAMlBxB,EANkB,KAMP6B,EANO,OAOaL,mBAAS,IAPtB,mBAOlBM,EAPkB,KAOLC,EAPK,OAQiBP,mBAAS,GAR1B,mBAQlBQ,EARkB,KAQHC,EARG,OASST,oBAAS,GATlB,mBASlBU,EATkB,KASPC,EATO,cAYVC,IAZU,2EAYzB,sBAAAC,EAAA,sEACOC,IADP,4CAZyB,sBAgBzB,IAAMA,EAAgB,uCAAG,oCAAAD,EAAA,6DAElBE,EAAY,IAAI3B,IAAO4B,UAAUC,aAAaC,OAAOC,UAErDC,EAAS,IAAIhC,IAAOiC,SACzBC,EAAgBC,MAChBC,EAAcC,IACdV,EAAUW,UAAU,IAPG,SAWEN,EAAOO,kBAXT,cAWlBC,EAXkB,OAYpBC,EAAS,EACbD,EAAYE,SAAQ,SAAAC,GAAG,OAAIF,GAAUE,EAAIxC,UAAUyC,cAEnDvB,EAAiBoB,GAfO,UAgBKT,EAAOd,cAhBZ,QAgBlB2B,EAhBkB,OAmBxB/B,EAASkB,GACTf,EAAauB,GACbrB,EAAe0B,GArBS,4CAAH,qDAhBG,4CAyCzB,8BAAApB,EAAA,sEACiCK,OAAOC,SAASe,SADjD,mCAECtB,EAFD,kDAzCyB,+BAoDVuB,EApDU,8EAoDzB,WAAgCC,GAAhC,iBAAAvB,EAAA,sEAC2BZ,EAAM0B,kBADjC,OACOC,EADP,OAEKC,EAAS,EACbD,EAAYE,SAAQ,SAAAC,GAAG,OAAIF,GAAUE,EAAIxC,UAAUyC,cACnD3B,EAAauB,GACbnB,EAAiBoB,GALlB,4CApDyB,sBA8CzBQ,qBAAU,YA9Ce,mCAiDxBC,KACE,IAUHD,qBAAU,WAIT,OAHGpC,GACFA,EAAMsC,GAAG,UAAUJ,GAEb,WACHlC,GACFA,EAAMuC,IAAI,UAAW,SAGrB,CAACvC,IAKJ,IAAMxB,EAAY,uCAAG,WAAOE,GAAP,SAAAkC,EAAA,+EAEbZ,EAAMwC,KAAK9D,GAFE,uDAInB+D,QAAQC,IAAI,UAAU,cACtBhC,GAAa,GACbiC,YAAW,kBAAMjC,GAAa,KAAQ,KANnB,yDAAH,sDAWZrD,GAAiB,uCAAG,4BAAAuD,EAAA,+EAEAZ,EAAM4C,OAAN,UAAgBzF,IAFhB,OAElB0F,EAFkB,OAGxB1C,EAAe0C,GAHS,gDAKxBJ,QAAQC,IAAR,MACAvC,EAAe,wBANS,yDAAH,qDAWjBP,GAAW,uCAAG,sBAAAgB,EAAA,+EAEZZ,EAAM8C,gBAAgBpD,GAFV,OAGlBQ,EAAkB,WAHA,gDAKlBuC,QAAQC,IAAR,MACAxC,EAAkB,wBANA,yDAAH,qDAUjB,OACC,sBAAK3C,MAAO,CAAEgC,QAAS,aAAvB,UACC,+CACA,kDAAqBgB,KACpBE,EACA,mBACClD,MAAO,CAACwF,OAAQ,GAAIC,MAAO,OAD5B,wCAIA,mBAAGzF,MAAO,CAACwF,OAAQ,MAEpB,8BACC,+CAAkB1C,OAEnB,cAAC,EAAD,CAAW9B,UAAWA,EAAWC,aAAcA,IAC/C,cAAC,EAAD,CACCoB,YAAaA,GACbD,YAAaA,EACbD,SAAUA,EACVG,eAAgBA,IAEjB,cAAC,EAAD,CACC1C,oBAAqBA,EACrBC,uBAAwBA,EACxBC,kBAAmBA,GACnBC,YAAaA,QClIF2F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.febd9886.chunk.js","sourcesContent":["const CheckVoterAddress = ({\n\tvoterAddressToCheck,\n\tsetVoterAddressToCheck,\n\tcheckAddressVoter,\n\tvoterStatus,\n}) => {\n\tconst handleNewAddressToCheckVote = (e) => {\n\t\tsetVoterAddressToCheck(e.target.value);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<h4>Check if an address vote status</h4>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '15em',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={voterAddressToCheck}\n\t\t\t\t\tonChange={handleNewAddressToCheckVote}\n\t\t\t\t/>\n\t\t\t\t<button onClick={checkAddressVoter}>Check</button>\n\t\t\t</div>\n\t\t\t{voterStatus !== 'An error has occured' && voterStatus && (\n\t\t\t\t<div style={{ paddingTop: '2em' }}>\n\t\t\t\t\t<h4>Voter Status</h4>\n\t\t\t\t\t<p>Account: {voterAddressToCheck}</p>\n\t\t\t\t\t<p>Voted: {voterStatus?.voted?.toString()}</p>\n\t\t\t\t\t<p>Vote Weight: {Number(voterStatus?.weight?._hex)}</p>\n\t\t\t\t</div>\n\t\t\t)}{' '}\n\t\t\t{voterStatus === 'An error has occured' && <p>{voterStatus}</p>}\n\t\t</div>\n\t);\n};\n\nexport default CheckVoterAddress;\n","import { parseName, parseBytes } from '../utils';\n\nconst Proposals = ({ proposals, voteProposal }) => {\n\treturn (\n\t\t<div>\n\t\t\t<h4>proposal:</h4>{' '}\n\t\t\t{proposals.map((proposal, index) => {\n\t\t\t\tconst name = parseName(parseBytes(proposal.name));\n\t\t\t\tconst voteCount = proposal.voteCount._hex;\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} style={{ padding: '1rem 0' }}>\n\t\t\t\t\t\tðŸ—³ {name} - {Number(voteCount)}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{ marginLeft: '2em' }}\n\t\t\t\t\t\t\tonClick={() => voteProposal(index)}>\n\t\t\t\t\t\t\tVote\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Proposals;\n","import { ethers } from 'ethers';\n\nexport const parseBytes = (bytesProposal) => {\n\treturn ethers.utils.parseBytes32String(bytesProposal);\n};\n\nexport const parseName = (name) => {\n\tconst newName = name.replace('-', ' ');\n\treturn newName[0].toUpperCase() + newName.substring(1);\n};","const AddVoter = ({ newVoter, setNewVoter, addNewVoter, newVoterStatus }) => {\n\tconst handleNewVoter = (e) => {\n\t\tsetNewVoter(e.target.value);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<h4>Give right to vote</h4>\n\t\t\t<p>(only chairman can give vote right)</p>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '15em',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}>\n\t\t\t\t<input value={newVoter} onChange={handleNewVoter} />\n\t\t\t\t<button onClick={addNewVoter}>Give right</button>\n\t\t\t</div>\n\t\t\t{newVoterStatus && <p>Status: {newVoterStatus}</p>}\n\t\t</div>\n\t);\n};\n\nexport default AddVoter;\n","import React, { useEffect, useState } from 'react';\n\nimport { ethers } from 'ethers';\n\nimport CheckVoterAddress from './CheckVoterAddress';\nimport Proposals from './Proposals';\nimport AddVoter from './AddVoter';\n\nimport TokenArtifact from '../ABI/Ballot.json';\nimport contractAddress from '../ABI/contract-address.json';\n\nexport const Dapp = () => {\n\tconst [token, setToken] = useState();\n\tconst [newVoter, setNewVoter] = useState('');\n\tconst [newVoterStatus, setNewVoterStatus] = useState('');\n\tconst [voterStatus, setVoterStatus] = useState();\n\tconst [voterAddressToCheck, setVoterAddressToCheck] = useState('');\n\tconst [proposals, setProposals] = useState([]);\n\tconst [chairperson, setChairperson] = useState('');\n\tconst [numberOfVotes, setNumberOfVotes] = useState(0)\n\tconst [showError, setShowError] = useState(false)\n\t// **************** Ethers Connection for the SmartContract ****************\n\n\tasync function _initialize() {\n\t\tawait _intializeEthers();\n\t}\n\n\tconst _intializeEthers = async () => {\n\t\t// ethers connection for the smartcontract\n\t\tconst _provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\t\tconst _token = new ethers.Contract(\n\t\t\tcontractAddress.Token,\n\t\t\tTokenArtifact.abi,\n\t\t\t_provider.getSigner(0)\n\t\t);\n\n\t\t// get the proposals\n\t\tconst newProposal = await _token.getAllProposals();\n\t\tlet nVotes = 0\n\t\tnewProposal.forEach(arr => nVotes += arr.voteCount.toNumber())\n\t\t// get the chairman address\n\t\tsetNumberOfVotes(nVotes)\n\t\tconst newChairperson = await _token.chairperson();\n\n\t\t// save the token data into a hook to reuse it along the app\n\t\tsetToken(_token);\n\t\tsetProposals(newProposal);\n\t\tsetChairperson(newChairperson);\n\t};\n\n\t// Connects to the smart contract token id (check /contracts/contract-address.json)\n\tasync function init() {\n\t\tconst [selectedAddress] = await window.ethereum.enable();\n\t\t_initialize(selectedAddress);\n\t}\n\n\tuseEffect(() => {\n\t\t// When the page loads it will initialize the init function\n\t\t// that we need to connect the frontend with the smartcontract\n\t\tinit();\n\t}, []);\n\n\tasync function updateVoteNumber(block) {\n\t\tconst newProposal = await token.getAllProposals();\n\t\tlet nVotes = 0\n\t\tnewProposal.forEach(arr => nVotes += arr.voteCount.toNumber())\n\t\tsetProposals(newProposal);\n\t\tsetNumberOfVotes(nVotes)\n\t}\n\n\tuseEffect(() => {\n\t\tif(token) {\n\t\t\ttoken.on(\"newVote\",updateVoteNumber )\n\t\t}\n\t\treturn () => {\n\t\t\tif(token){\n\t\t\t\ttoken.off(\"newVote\", null)\n\t\t\t}\n\t\t}\n\t}, [token])\n\n\t// **************** Here Starts The Real Logic of the Frontend -> SmartContract ****************\n\n\t// Vote the selected proposal (you can only vote one time)\n\tconst voteProposal = async (proposal) => {\n\t\ttry {\n\t\t\tawait token.vote(proposal);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"error: \",error[\"message\"])\n\t\t\tsetShowError(true)\n\t\t\tsetTimeout(() => setShowError(false), 2000)\n\t\t}\n\t};\n\n\t// Check if the address the user entered is a a voter or not\n\tconst checkAddressVoter = async () => {\n\t\ttry {\n\t\t\tconst voterData = await token.voters(`${voterAddressToCheck}`);\n\t\t\tsetVoterStatus(voterData);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetVoterStatus('An error has occured');\n\t\t}\n\t};\n\n\t// It gives the right to vote to a new address\n\tconst addNewVoter = async () => {\n\t\ttry {\n\t\t\tawait token.giveRightToVote(newVoter);\n\t\t\tsetNewVoterStatus('Success');\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetNewVoterStatus('An error has occured');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{ padding: '3rem 5rem' }}>\n\t\t\t<h1>Voting System</h1>\n\t\t\t<p>Number Of Votee: {numberOfVotes}</p>\n\t\t\t{showError? \n\t\t\t\t<p\n\t\t\t\t\tstyle={{height: 32, color: 'red'}}\n\t\t\t\t>You probably already voted</p>\n\t\t\t:\n\t\t\t\t<p style={{height: 32}}></p>\n\t\t\t}\n\t\t\t<div>\n\t\t\t\t<h4>chairperson: {chairperson}</h4>\n\t\t\t</div>\n\t\t\t<Proposals proposals={proposals} voteProposal={voteProposal} />\n\t\t\t<AddVoter\n\t\t\t\taddNewVoter={addNewVoter}\n\t\t\t\tsetNewVoter={setNewVoter}\n\t\t\t\tnewVoter={newVoter}\n\t\t\t\tnewVoterStatus={newVoterStatus}\n\t\t\t/>\n\t\t\t<CheckVoterAddress\n\t\t\t\tvoterAddressToCheck={voterAddressToCheck}\n\t\t\t\tsetVoterAddressToCheck={setVoterAddressToCheck}\n\t\t\t\tcheckAddressVoter={checkAddressVoter}\n\t\t\t\tvoterStatus={voterStatus}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Dapp } from './components/Dapp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Dapp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}